<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MypageDAO">

<!-- movie id 정보값 가지고 오기 -->

    <select id="movieSelectOne" resultType="mypageVO" parameterType="MovieInfoVO">
        select * from popcorn.movie
        where movieId = #{movieId}
    </select>
    
    
    	<!-- member 하나만 검색 -->
	<select id="selectOne" parameterType="String"
		resultType="MemberVO">
		select *
		from popcorn.member
		where member_id = #{member_id}
	</select>

	<!-- member 조회수 증가 -->
	<update id="viewCount" parameterType="String">
		update popcorn.member
		set member_view = member_view + 1
		where member_id = #{member_id}
	</update>
	
    <!-- 회원의 모든 bbs list 페이징 서브쿼리 -->
    <select id="myBbsAll" resultType="mypageVO" parameterType="MemberPageVO">
	select * from (
	select
	row_number() over(order by member_id desc) as mybbs_no,
	b.bbs_no, m.member_id, m.member_knickname , b.bbs_title, b.bbs_date
	from member m
	inner join bbs b 
	on m.member_id = b.member_id 
	where m.member_id = #{member_id}) mb2
	where mb2.mybbs_no between #{start} and #{end}
	</select>
	
	<!-- 회원의 모든 review list 페이징 서브쿼리 -->
	    <select id="myReviewAll" resultType="mypageVO" parameterType="MemberPageVO">
	select * from(
	select
	row_number() over(order by member_id) as mr_no,
	m2.movieTitle, mr.reviewContent, m.member_knickname 
	from member m
	inner join movie_review mr
	on m.member_id = mr.memberId 
	inner join movie m2 
	on m2.movieId = mr.movieId 
	where m.member_id = #{member_id}) mr2
	where mr2.mr_no between #{start} and #{end}
	</select>
	
    <!-- 회원이 쓴 bbs 카운트 -->
    <select id="myBbsCount" resultType="Integer">
    select count(*)
	from member m
	inner join bbs b on m.member_id = b.member_id
	where m.member_id = #{member_id}
    </select>
    
    <!-- 회원이 쓴 review 카운트 -->
    <select id="myReviewCount" resultType="Integer">
   select count(*)
	from member m
	inner join movie_review mr on m.member_id = mr.memberId 
	inner join movie m2 on m2.movieId = mr.movieId 
	where m.member_id = #{member_id}
	</select>

<!-- 회원이 쓴 댓글 카운트 -->
	<select id="myReplyCount" resultType="Integer">
	select count(*)
	from member m
	inner join b_comment bc ON m.member_id = bc.b_comment_writer_id 
	where m.member_id = #{member_id}
	</select>
		
	<!-- 회원이 쓴 대댓글 카운트 -->
		<select id="myReplyCount2" resultType="Integer">
	select count(*)
	from member m
	inner join b_reply br on m.member_id =br.b_reply_writer_id 
	where m.member_id = #{member_id}
	</select>
	
	<!-- 회원 찜 목록 카운트 -->
	<select id="myJjimCount" resultType="Integer">
	select count(*)
	from member m
	inner join moviejjim m2 on m.member_id = m2.member_id
    inner join movie m3 on m3.movieId = m2.movieId
	where m.member_id = #{member_id} and m2.movie_like = 1	
	</select>
	
	<!-- 회원의 영화 찜 목록 추가  -->
	<insert id ="addMovieJjim" parameterType="mypageVO">
		insert into moviejjim values(#{movieId}, #{member_id}, 1)
	</insert>
	
	<!-- 회원의 영화 찜 목록 삭제 -->
		<delete id ="removeMovieJjim" parameterType="mypageVO">
		delete from moviejjim
		where movieId = #{movieId} and member_id = #{member_id}
	</delete>
	
	<!-- 회원이 찜을 했는지 안했는지(찜 체크 여부) -->
	<select id = "JjimCheck"  resultType="Integer" parameterType="mypageVO">
	select movie_like 
	from moviejjim 
	where member_id = #{member_id} and movieId = #{movieId}
	</select>
	
	<!-- 회원 찜 목록 -->
 <select id="myJjimAll" resultType="mypageVO" parameterType="MemberPageVO">
	select * from (
	select
	row_number() over (order by member_id desc) as mj_no,
	m3.movieid, m3.movietitle, m3.movieimg, m3.moviegrade, m2.movie_like, m.member_id
	from member m
	inner join moviejjim m2 on m.member_id = m2.member_id
	inner join movie m3 on m3.movieid = m2.movieid
	where m.member_id = #{member_id} and m2.movie_like = 1
	) mjj
	where mjj.mj_no between #{start} and #{end};
	</select>
	
	<!-- 	<select id = "JjimCheck"  resultType="Integer" parameterType="mypageVO">
	select count(*) from moviejjim 
	where member_id = #{member_id} and movieId = #{movieId}
	</select> -->
	
	
	
</mapper>