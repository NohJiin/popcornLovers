<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberDAO">
	<!-- 회원가입 -->
	<insert id="create" parameterType="memberVO">
		<selectKey keyProperty="member_level" resultType="int"
			order="BEFORE">
			select 1
		</selectKey>
		insert into
		popcorn.member values (#{member_id}, #{member_pw}, #{member_name},
		#{member_knickname},
		#{member_tel}, #{member_email}, #{member_level}, 0 , 0 , 'profil.png', #{member_age},
		#{member_gender})
	</insert>

	<!-- 로그인 -->
	<select id="login" parameterType="memberVO" resultType="String">
		select
		member_knickname from popcorn.member
		where member_id = #{member_id} and
		member_pw = #{member_pw}
	</select>

	<!-- 아이디 중복 체크 -->
	<select id="idCheck" parameterType="String" resultType="MemberVO">
		select * from popcorn.member where member_id = #{member_id}
		<!-- dao에서 가져온 member_id 가 #{member_id}에 입력 -->
	</select>
	
		<!-- 닉네임 중복 체크 -->
	<select id="knicknameCheck" parameterType="String" resultType="MemberVO">
		select * from popcorn.member where member_knickname = #{member_knickname}
	</select>

	<!-- 아이디와 비밀번호 체크용 -->
	<select id="memberCheck"  parameterType="memberVO" resultType="int">
	select * from member 
	where member_id = #{member_id} and member_pw = #{member_pw}
	</select>

	<!-- 회원 정보 수정 -->
	<update id="update" parameterType="memberVO">
		update popcorn.member
		set
		member_knickname= #{member_knickname} , member_pw =#{member_pw} ,
		member_tel = #{member_tel} where member_id = #{member_id}
	</update>

	<!-- 회원 탈퇴 -->
	<!-- <delete id="remove" parameterType="memberVO">
		delete from popcorn.member
		where member_id= #{member_id} and member_pw = #{member_pw}
	</delete> -->
	<!-- 회원 탈퇴의 경우 실제론 삭제보단 update문을 써서 회원이 탈퇴를 원할 때
	탈퇴된 회원임을 알려주는 컬럼에 탈퇴 관련 데이터를 넣어 update로 넣어주고 구분해줌 -->
	
		<!-- 회원 탈퇴 (회원이 탈퇴를 요청했을 때 비밀번호에 delete 값을 넣어서 구분해준다)-->
	<update id="remove" parameterType="String">
		update popcorn.member 
		set member_pw = "delete"
		where member_id= #{member_id} and member_pw = #{member_pw}
	</update>

	<!-- 회원 전체 리스트 -->
	<select id="all" resultType="memberVO">
		select * from popcorn.member
	</select>

	<!-- member 하나만 검색 -->
	<select id="selectOne" parameterType="String" resultType="MemberVO">
		select *
		from popcorn.member
		where member_id = #{member_id}
	</select>

	<!-- member 조회수 증가 -->
	<update id="viewCount" parameterType="String">
		update popcorn.member
		set member_view = member_view + 1
		where member_id = #{member_id}
	</update>
	
	<!-- login 할때마다 member_point에 login_count값 1씩 더하기 -->
	<update id="loginCount" parameterType="String">
		update popcorn.member_point p
		set p.login_count = p.login_count + 1
		where p.member_id = #{member_id}
	</update>
	
	<!-- 회원 프로필 이미지 수정 -->
    <update id="profileUp" parameterType="MemberVO">
    	update popcorn.member
    	set
    	member_img = #{member_img} where member_id = #{member_id}
    </update>
    
    
    <!-- member 테이블에서 삭제된 id와 동일한 아이디를 rankuser 테이블에서도 삭제 -->
    <delete id="rankDel" parameterType="String">
    	delete from popcorn.rankuser r
		where r.member_id = ${member_id}
    </delete>
    
</mapper>